import moment from 'moment';import axios from '@services/axios';import { categories, CurrentItem, Movie } from '@store/atoms';type FetchMoviesByCategoryResponse = {  page: number,  results: Movie[],  total_pages: number,  total_results: number,};const normalizeMovies = (movies: any[]): Movie[] => movies.map(movie => ({  id: movie.id,  posterPath: movie.poster_path,  title: movie.title,  overview: movie.overview,  releaseDate: movie.release_date ? moment(movie.release_date, 'YYYY-MM-DD') : null,  firstAirDate: movie.first_air_date ? moment(movie.first_air_date, 'YYYY-MM-DD') : null,  voteAverage: movie.vote_average}));const normalizeCurrentItem = (currentItem: any): CurrentItem => ({  id: currentItem.id,  backdropPath: currentItem.backdrop_path,  releaseDate: currentItem.release_date ? moment(currentItem.release_date, 'YYYY-MM-DD') : null,  firstAirDate: currentItem.first_air_date ? moment(currentItem.first_air_date, 'YYYY-MM-DD') : null,  genres: currentItem.genres,  inProduction: currentItem.in_production,  name: currentItem.name,  overview: currentItem.overview,  posterPath: currentItem.poster_path,  tagline: currentItem.tagline,  voteAverage: currentItem.vote_average,  createdBy: currentItem.created_by?.[0]?.name});export const fetchMoviesByCategory = (category: typeof categories[number], page: number) =>  axios.get<FetchMoviesByCategoryResponse>(`/${category}/popular?page=${page}`)    .then(({ data }) => ({      ...data,      results: normalizeMovies(data.results)    }));export const fetchItemById = (category: typeof categories[number], id: string) =>  axios.get<any>(`/${category}/${id}`)    .then(({ data }) => normalizeCurrentItem(data));